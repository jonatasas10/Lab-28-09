

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 04 09:39:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.20
    20                           ; Generated 12/02/2020 GMT
    21                           ; 
    22                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F628A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001F                     	;# 
    77  0081                     	;# 
    78  0085                     	;# 
    79  0086                     	;# 
    80  008C                     	;# 
    81  008E                     	;# 
    82  0092                     	;# 
    83  0098                     	;# 
    84  0099                     	;# 
    85  009A                     	;# 
    86  009B                     	;# 
    87  009C                     	;# 
    88  009D                     	;# 
    89  009F                     	;# 
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0015                     	;# 
   107  0015                     	;# 
   108  0016                     	;# 
   109  0017                     	;# 
   110  0018                     	;# 
   111  0019                     	;# 
   112  001A                     	;# 
   113  001F                     	;# 
   114  0081                     	;# 
   115  0085                     	;# 
   116  0086                     	;# 
   117  008C                     	;# 
   118  008E                     	;# 
   119  0092                     	;# 
   120  0098                     	;# 
   121  0099                     	;# 
   122  009A                     	;# 
   123  009B                     	;# 
   124  009C                     	;# 
   125  009D                     	;# 
   126  009F                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  000A                     	;# 
   135  000B                     	;# 
   136  000C                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0015                     	;# 
   144  0015                     	;# 
   145  0016                     	;# 
   146  0017                     	;# 
   147  0018                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  008C                     	;# 
   155  008E                     	;# 
   156  0092                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009A                     	;# 
   160  009B                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009F                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  000A                     	;# 
   172  000B                     	;# 
   173  000C                     	;# 
   174  000E                     	;# 
   175  000E                     	;# 
   176  000F                     	;# 
   177  0010                     	;# 
   178  0011                     	;# 
   179  0012                     	;# 
   180  0015                     	;# 
   181  0015                     	;# 
   182  0016                     	;# 
   183  0017                     	;# 
   184  0018                     	;# 
   185  0019                     	;# 
   186  001A                     	;# 
   187  001F                     	;# 
   188  0081                     	;# 
   189  0085                     	;# 
   190  0086                     	;# 
   191  008C                     	;# 
   192  008E                     	;# 
   193  0092                     	;# 
   194  0098                     	;# 
   195  0099                     	;# 
   196  009A                     	;# 
   197  009B                     	;# 
   198  009C                     	;# 
   199  009D                     	;# 
   200  009F                     	;# 
   201                           
   202                           	psect	strings
   203  0001                     __pstrings:
   204  0001                     stringtab:
   205  0001                     __stringtab:
   206  0001                     stringcode:	
   207                           ;	String table - string pointers are 1 byte each
   208                           
   209  0001                     stringdir:
   210  0001  3000               	movlw	high stringdir
   211  0002  008A               	movwf	10
   212  0003  0804               	movf	4,w
   213  0004  0A84               	incf	4,f
   214  0005  0782               	addwf	2,f
   215  0006                     __stringbase:
   216  0006  3400               	retlw	0
   217  0007                     __end_of__stringtab:
   218  0007                     _linha:
   219  0007  3402               	retlw	2
   220  0008  3404               	retlw	4
   221  0009  3440               	retlw	64
   222  000A  3480               	retlw	128
   223  000B                     __end_of_linha:
   224  0006                     _PORTB	set	6
   225  0005                     _PORTA	set	5
   226  001F                     _CMCON	set	31
   227  0035                     _RB5	set	53
   228  0036                     _RB6	set	54
   229  0037                     _RB7	set	55
   230  0028                     _RA0	set	40
   231  0033                     _RB3	set	51
   232  0034                     _RB4	set	52
   233  002A                     _RA2	set	42
   234  0029                     _RA1	set	41
   235  0086                     _TRISB	set	134
   236  0085                     _TRISA	set	133
   237  000B                     STR_5:
   238  000B  3454               	retlw	84	;'T'
   239  000C  3465               	retlw	101	;'e'
   240  000D  3473               	retlw	115	;'s'
   241  000E  3474               	retlw	116	;'t'
   242  000F  3465               	retlw	101	;'e'
   243  0010  3420               	retlw	32	;' '
   244  0011  3454               	retlw	84	;'T'
   245  0012  3465               	retlw	101	;'e'
   246  0013  3463               	retlw	99	;'c'
   247  0014  346C               	retlw	108	;'l'
   248  0015  3461               	retlw	97	;'a'
   249  0016  3464               	retlw	100	;'d'
   250  0017  346F               	retlw	111	;'o'
   251  0018  3400               	retlw	0
   252  0019                     STR_4:
   253  0019  3454               	retlw	84	;'T'
   254  001A  3465               	retlw	101	;'e'
   255  001B  3473               	retlw	115	;'s'
   256  001C  3474               	retlw	116	;'t'
   257  001D  3465               	retlw	101	;'e'
   258  001E  3420               	retlw	32	;' '
   259  001F  344C               	retlw	76	;'L'
   260  0020  3445               	retlw	69	;'E'
   261  0021  3444               	retlw	68	;'D'
   262  0022  3473               	retlw	115	;'s'
   263  0023  3400               	retlw	0
   264  0024                     STR_1:
   265  0024  3454               	retlw	84	;'T'
   266  0025  3465               	retlw	101	;'e'
   267  0026  3473               	retlw	115	;'s'
   268  0027  3474               	retlw	116	;'t'
   269  0028  3465               	retlw	101	;'e'
   270  0029  3420               	retlw	32	;' '
   271  002A  344C               	retlw	76	;'L'
   272  002B  3443               	retlw	67	;'C'
   273  002C  3444               	retlw	68	;'D'
   274  002D  3400               	retlw	0
   275  002E                     STR_3:
   276  002E  344F               	retlw	79	;'O'
   277  002F  346B               	retlw	107	;'k'
   278  0030  3400               	retlw	0
   279  0024                     
   280                           	psect	cinit
   281  07FE                     start_initialization:	
   282                           ; #config settings
   283                           
   284  07FE                     __initialization:
   285  07FE                     end_of_initialization:	
   286                           ;End of C runtime variable initialization code
   287                           
   288  07FE                     __end_of__initialization:
   289  07FE  0183               	clrf	3
   290  07FF  2EBA               	ljmp	_main	;jump to C main() function
   291                           
   292                           	psect	cstackCOMMON
   293  0070                     __pcstackCOMMON:
   294  0070                     ?_lcd_init:
   295  0070                     ?_lcd_cmd:	
   296                           ; 1 bytes @ 0x0
   297                           
   298  0070                     ?_lcd_dat:	
   299                           ; 1 bytes @ 0x0
   300                           
   301  0070                     ?_lcd_str:	
   302                           ; 1 bytes @ 0x0
   303                           
   304  0070                     ?_main:	
   305                           ; 1 bytes @ 0x0
   306                           
   307  0070                     ?_lcd_wr:	
   308                           ; 1 bytes @ 0x0
   309                           
   310  0070                     ??_lcd_wr:	
   311                           ; 1 bytes @ 0x0
   312                           
   313  0070                     ?___bmul:	
   314                           ; 1 bytes @ 0x0
   315                           
   316  0070                     ___bmul@multiplicand:	
   317                           ; 1 bytes @ 0x0
   318                           
   319                           
   320                           ; 1 bytes @ 0x0
   321  0070                     	ds	1
   322  0071                     ??___bmul:
   323  0071                     lcd_wr@val:	
   324                           ; 1 bytes @ 0x1
   325                           
   326                           
   327                           ; 1 bytes @ 0x1
   328  0071                     	ds	1
   329  0072                     lcd_wr@i:
   330  0072                     ___bmul@product:	
   331                           ; 1 bytes @ 0x2
   332                           
   333                           
   334                           ; 1 bytes @ 0x2
   335  0072                     	ds	1
   336  0073                     ??_lcd_cmd:
   337  0073                     ??_lcd_dat:	
   338                           ; 1 bytes @ 0x3
   339                           
   340  0073                     ___bmul@multiplier:	
   341                           ; 1 bytes @ 0x3
   342                           
   343                           
   344                           ; 1 bytes @ 0x3
   345  0073                     	ds	1
   346  0074                     ?_tc_tecla:
   347  0074                     tc_tecla@timeout:	
   348                           ; 1 bytes @ 0x4
   349                           
   350                           
   351                           ; 2 bytes @ 0x4
   352  0074                     	ds	1
   353  0075                     lcd_cmd@val:
   354  0075                     lcd_dat@val:	
   355                           ; 1 bytes @ 0x5
   356                           
   357                           
   358                           ; 1 bytes @ 0x5
   359  0075                     	ds	1
   360  0076                     ??_lcd_init:
   361  0076                     ??_lcd_str:	
   362                           ; 1 bytes @ 0x6
   363                           
   364  0076                     ??_tc_tecla:	
   365                           ; 1 bytes @ 0x6
   366                           
   367                           
   368                           ; 1 bytes @ 0x6
   369  0076                     	ds	1
   370  0077                     lcd_str@i:
   371                           
   372                           ; 1 bytes @ 0x7
   373  0077                     	ds	1
   374  0078                     lcd_str@str:
   375  0078                     tc_tecla@to:	
   376                           ; 1 bytes @ 0x8
   377                           
   378                           
   379                           ; 2 bytes @ 0x8
   380  0078                     	ds	2
   381  007A                     tc_tecla@tmp:
   382                           
   383                           ; 1 bytes @ 0xA
   384  007A                     	ds	1
   385  007B                     tc_tecla@ret:
   386                           
   387                           ; 1 bytes @ 0xB
   388  007B                     	ds	1
   389  007C                     tc_tecla@i:
   390                           
   391                           ; 1 bytes @ 0xC
   392  007C                     	ds	1
   393                           
   394                           	psect	cstackBANK0
   395  0020                     __pcstackBANK0:
   396  0020                     ??_main:
   397                           
   398                           ; 1 bytes @ 0x0
   399  0020                     	ds	3
   400  0023                     main@tecla:
   401                           
   402                           ; 1 bytes @ 0x3
   403  0023                     	ds	1
   404  0024                     main@i:
   405                           
   406                           ; 1 bytes @ 0x4
   407  0024                     	ds	1
   408                           
   409                           	psect	maintext
   410  06BA                     __pmaintext:	
   411 ;;
   412 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   413 ;;
   414 ;; *************** function _main *****************
   415 ;; Defined at:
   416 ;;		line 31 in file "LCD_Teclado.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  i               1    4[BANK0 ] unsigned char 
   421 ;;  tecla           1    3[BANK0 ] unsigned char 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      void 
   424 ;; Registers used:
   425 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : B00/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   431 ;;      Params:         0       0       0       0
   432 ;;      Locals:         0       2       0       0
   433 ;;      Temps:          0       3       0       0
   434 ;;      Totals:         0       5       0       0
   435 ;;Total ram usage:        5 bytes
   436 ;; Hardware stack levels required when called: 3
   437 ;; This function calls:
   438 ;;		_lcd_cmd
   439 ;;		_lcd_dat
   440 ;;		_lcd_init
   441 ;;		_lcd_str
   442 ;;		_tc_tecla
   443 ;; This function is called by:
   444 ;;		Startup code after reset
   445 ;; This function uses a non-reentrant model
   446 ;;
   447                           
   448                           
   449                           ;psect for function _main
   450  06BA                     _main:
   451  06BA                     l1133:	
   452                           ;incstack = 0
   453                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   454                           
   455                           
   456                           ;LCD_Teclado.c: 33:     unsigned char i;;LCD_Teclado.c: 34:     unsigned char tecla;;LCD
      +                          _Teclado.c: 35:     CMCON=0x07;
   457  06BA  3007               	movlw	7
   458  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   459  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   460  06BD  009F               	movwf	31	;volatile
   461                           
   462                           ;LCD_Teclado.c: 36:     TRISA=0x30;
   463  06BE  3030               	movlw	48
   464  06BF  1683               	bsf	3,5	;RP0=1, select bank1
   465  06C0  1303               	bcf	3,6	;RP1=0, select bank1
   466  06C1  0085               	movwf	5	;volatile
   467                           
   468                           ;LCD_Teclado.c: 37:     TRISB=0xE7;
   469  06C2  30E7               	movlw	231
   470  06C3  0086               	movwf	6	;volatile
   471                           
   472                           ;LCD_Teclado.c: 39:     PORTA=0xFE;
   473  06C4  30FE               	movlw	254
   474  06C5  1283               	bcf	3,5	;RP0=0, select bank0
   475  06C6  1303               	bcf	3,6	;RP1=0, select bank0
   476  06C7  0085               	movwf	5	;volatile
   477  06C8                     l1135:
   478                           
   479                           ;LCD_Teclado.c: 40:     PORTB=0x00;
   480  06C8  0186               	clrf	6	;volatile
   481  06C9                     l1137:
   482                           
   483                           ;LCD_Teclado.c: 42:     lcd_init();
   484  06C9  25BE               	fcall	_lcd_init
   485  06CA                     l1139:
   486                           
   487                           ;LCD_Teclado.c: 45:     {;LCD_Teclado.c: 47:         lcd_cmd(0x01);
   488  06CA  3001               	movlw	1
   489  06CB  2553               	fcall	_lcd_cmd
   490  06CC                     l1141:
   491                           
   492                           ;LCD_Teclado.c: 48:         lcd_cmd(0x80);
   493  06CC  3080               	movlw	128
   494  06CD  2553               	fcall	_lcd_cmd
   495  06CE                     l1143:
   496                           
   497                           ;LCD_Teclado.c: 50:         for(i=0;i<16;i++)
   498  06CE  1283               	bcf	3,5	;RP0=0, select bank0
   499  06CF  1303               	bcf	3,6	;RP1=0, select bank0
   500  06D0  01A4               	clrf	main@i
   501  06D1                     l1149:
   502                           
   503                           ;LCD_Teclado.c: 51:         {;LCD_Teclado.c: 52:             lcd_dat('A'+i);
   504  06D1  0824               	movf	main@i,w
   505  06D2  3E41               	addlw	65
   506  06D3  2575               	fcall	_lcd_dat
   507  06D4                     l1151:
   508                           
   509                           ;LCD_Teclado.c: 53:         }
   510  06D4  3001               	movlw	1
   511  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   512  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   513  06D7  00A0               	movwf	??_main
   514  06D8  0820               	movf	??_main,w
   515  06D9  07A4               	addwf	main@i,f
   516  06DA                     l1153:
   517  06DA  3010               	movlw	16
   518  06DB  0224               	subwf	main@i,w
   519  06DC  1C03               	skipc
   520  06DD  2EDF               	goto	u511
   521  06DE  2EE0               	goto	u510
   522  06DF                     u511:
   523  06DF  2ED1               	goto	l1149
   524  06E0                     u510:
   525  06E0                     l1155:
   526                           
   527                           ;LCD_Teclado.c: 54:         lcd_cmd(0xC0);
   528  06E0  30C0               	movlw	192
   529  06E1  2553               	fcall	_lcd_cmd
   530  06E2                     l1157:
   531                           
   532                           ;LCD_Teclado.c: 56:         for(i=0;i<16;i++)
   533  06E2  1283               	bcf	3,5	;RP0=0, select bank0
   534  06E3  1303               	bcf	3,6	;RP1=0, select bank0
   535  06E4  01A4               	clrf	main@i
   536  06E5                     l1163:
   537                           
   538                           ;LCD_Teclado.c: 57:         {;LCD_Teclado.c: 58:         lcd_dat('a'+i);
   539  06E5  0824               	movf	main@i,w
   540  06E6  3E61               	addlw	97
   541  06E7  2575               	fcall	_lcd_dat
   542  06E8                     l1165:
   543                           
   544                           ;LCD_Teclado.c: 59:         }
   545  06E8  3001               	movlw	1
   546  06E9  1283               	bcf	3,5	;RP0=0, select bank0
   547  06EA  1303               	bcf	3,6	;RP1=0, select bank0
   548  06EB  00A0               	movwf	??_main
   549  06EC  0820               	movf	??_main,w
   550  06ED  07A4               	addwf	main@i,f
   551  06EE                     l1167:
   552  06EE  3010               	movlw	16
   553  06EF  0224               	subwf	main@i,w
   554  06F0  1C03               	skipc
   555  06F1  2EF3               	goto	u521
   556  06F2  2EF4               	goto	u520
   557  06F3                     u521:
   558  06F3  2EE5               	goto	l1163
   559  06F4                     u520:
   560  06F4                     l1169:
   561                           
   562                           ;LCD_Teclado.c: 61:         _delay((unsigned long)((200)*(4000000/4000.0)));
   563  06F4  3002               	movlw	2
   564  06F5  1283               	bcf	3,5	;RP0=0, select bank0
   565  06F6  1303               	bcf	3,6	;RP1=0, select bank0
   566  06F7  00A2               	movwf	??_main+2
   567  06F8  3004               	movlw	4
   568  06F9  00A1               	movwf	??_main+1
   569  06FA  30BA               	movlw	186
   570  06FB  00A0               	movwf	??_main
   571  06FC                     u577:
   572  06FC  0BA0               	decfsz	??_main,f
   573  06FD  2EFC               	goto	u577
   574  06FE  0BA1               	decfsz	??_main+1,f
   575  06FF  2EFC               	goto	u577
   576  0700  0BA2               	decfsz	??_main+2,f
   577  0701  2EFC               	goto	u577
   578  0702                     l1171:
   579                           
   580                           ;LCD_Teclado.c: 62:         lcd_cmd(0x01);
   581  0702  3001               	movlw	1
   582  0703  2553               	fcall	_lcd_cmd
   583  0704                     l1173:
   584                           
   585                           ;LCD_Teclado.c: 63:         lcd_cmd(0x80 +3);
   586  0704  3083               	movlw	131
   587  0705  2553               	fcall	_lcd_cmd
   588  0706                     l1175:
   589                           
   590                           ;LCD_Teclado.c: 64:         lcd_str("Teste LCD");
   591  0706  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   592  0707  253D               	fcall	_lcd_str
   593  0708                     l1177:
   594                           
   595                           ;LCD_Teclado.c: 66:         for(i=32;i<128;i++)
   596  0708  3020               	movlw	32
   597  0709  1283               	bcf	3,5	;RP0=0, select bank0
   598  070A  1303               	bcf	3,6	;RP1=0, select bank0
   599  070B  00A0               	movwf	??_main
   600  070C  0820               	movf	??_main,w
   601  070D  00A4               	movwf	main@i
   602  070E                     l1183:
   603                           
   604                           ;LCD_Teclado.c: 67:         {;LCD_Teclado.c: 68:             if((i%16) == 0)lcd_cmd(0xC0
      +                          );
   605  070E  0824               	movf	main@i,w
   606  070F  390F               	andlw	15
   607  0710  1D03               	btfss	3,2
   608  0711  2F13               	goto	u531
   609  0712  2F14               	goto	u530
   610  0713                     u531:
   611  0713  2F16               	goto	l38
   612  0714                     u530:
   613  0714                     l1185:
   614  0714  30C0               	movlw	192
   615  0715  2553               	fcall	_lcd_cmd
   616  0716                     l38:
   617                           
   618                           ;LCD_Teclado.c: 69:             lcd_dat(i);
   619  0716  1283               	bcf	3,5	;RP0=0, select bank0
   620  0717  1303               	bcf	3,6	;RP1=0, select bank0
   621  0718  0824               	movf	main@i,w
   622  0719  2575               	fcall	_lcd_dat
   623  071A                     l1187:
   624                           
   625                           ;LCD_Teclado.c: 70:             _delay((unsigned long)((50)*(4000000/4000.0)));
   626  071A  3041               	movlw	65
   627  071B  1283               	bcf	3,5	;RP0=0, select bank0
   628  071C  1303               	bcf	3,6	;RP1=0, select bank0
   629  071D  00A1               	movwf	??_main+1
   630  071E  30EE               	movlw	238
   631  071F  00A0               	movwf	??_main
   632  0720                     u587:
   633  0720  0BA0               	decfsz	??_main,f
   634  0721  2F20               	goto	u587
   635  0722  0BA1               	decfsz	??_main+1,f
   636  0723  2F20               	goto	u587
   637  0724                     l1189:
   638                           
   639                           ;LCD_Teclado.c: 71:         }
   640  0724  3001               	movlw	1
   641  0725  1283               	bcf	3,5	;RP0=0, select bank0
   642  0726  1303               	bcf	3,6	;RP1=0, select bank0
   643  0727  00A0               	movwf	??_main
   644  0728  0820               	movf	??_main,w
   645  0729  07A4               	addwf	main@i,f
   646  072A                     l1191:
   647  072A  3080               	movlw	128
   648  072B  0224               	subwf	main@i,w
   649  072C  1C03               	skipc
   650  072D  2F2F               	goto	u541
   651  072E  2F30               	goto	u540
   652  072F                     u541:
   653  072F  2F0E               	goto	l1183
   654  0730                     u540:
   655  0730                     l1193:
   656                           
   657                           ;LCD_Teclado.c: 73:         _delay((unsigned long)((100)*(4000000/4000.0)));
   658  0730  3082               	movlw	130
   659  0731  1283               	bcf	3,5	;RP0=0, select bank0
   660  0732  1303               	bcf	3,6	;RP1=0, select bank0
   661  0733  00A1               	movwf	??_main+1
   662  0734  30DD               	movlw	221
   663  0735  00A0               	movwf	??_main
   664  0736                     u597:
   665  0736  0BA0               	decfsz	??_main,f
   666  0737  2F36               	goto	u597
   667  0738  0BA1               	decfsz	??_main+1,f
   668  0739  2F36               	goto	u597
   669  073A  0000               	nop
   670  073B                     l1195:
   671                           
   672                           ;LCD_Teclado.c: 74:         lcd_cmd(0x01);
   673  073B  3001               	movlw	1
   674  073C  2553               	fcall	_lcd_cmd
   675  073D                     l1197:
   676                           
   677                           ;LCD_Teclado.c: 75:         lcd_cmd(0x80 +3);
   678  073D  3083               	movlw	131
   679  073E  2553               	fcall	_lcd_cmd
   680  073F                     l1199:
   681                           
   682                           ;LCD_Teclado.c: 76:         lcd_str("Teste LCD");
   683  073F  301E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   684  0740  253D               	fcall	_lcd_str
   685  0741                     l1201:
   686                           
   687                           ;LCD_Teclado.c: 77:         lcd_cmd(0xC0 +7);
   688  0741  30C7               	movlw	199
   689  0742  2553               	fcall	_lcd_cmd
   690  0743                     l1203:
   691                           
   692                           ;LCD_Teclado.c: 78:         lcd_str("Ok");
   693  0743  3028               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   694  0744  253D               	fcall	_lcd_str
   695  0745                     l1205:
   696                           
   697                           ;LCD_Teclado.c: 79:         _delay((unsigned long)((500)*(4000000/4000.0)));
   698  0745  3003               	movlw	3
   699  0746  1283               	bcf	3,5	;RP0=0, select bank0
   700  0747  1303               	bcf	3,6	;RP1=0, select bank0
   701  0748  00A2               	movwf	??_main+2
   702  0749  308A               	movlw	138
   703  074A  00A1               	movwf	??_main+1
   704  074B  3055               	movlw	85
   705  074C  00A0               	movwf	??_main
   706  074D                     u607:
   707  074D  0BA0               	decfsz	??_main,f
   708  074E  2F4D               	goto	u607
   709  074F  0BA1               	decfsz	??_main+1,f
   710  0750  2F4D               	goto	u607
   711  0751  0BA2               	decfsz	??_main+2,f
   712  0752  2F4D               	goto	u607
   713  0753  0000               	nop
   714                           
   715                           ;LCD_Teclado.c: 82:         lcd_cmd(0x01);
   716  0754  3001               	movlw	1
   717  0755  2553               	fcall	_lcd_cmd
   718                           
   719                           ;LCD_Teclado.c: 83:         lcd_cmd(0x80 +1);
   720  0756  3081               	movlw	129
   721  0757  2553               	fcall	_lcd_cmd
   722  0758                     l1207:
   723                           
   724                           ;LCD_Teclado.c: 84:         lcd_str("Teste LEDs");
   725  0758  3013               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   726  0759  253D               	fcall	_lcd_str
   727  075A                     l1209:
   728                           
   729                           ;LCD_Teclado.c: 85:         _delay((unsigned long)((500)*(4000000/4000.0)));
   730  075A  3003               	movlw	3
   731  075B  1283               	bcf	3,5	;RP0=0, select bank0
   732  075C  1303               	bcf	3,6	;RP1=0, select bank0
   733  075D  00A2               	movwf	??_main+2
   734  075E  308A               	movlw	138
   735  075F  00A1               	movwf	??_main+1
   736  0760  3055               	movlw	85
   737  0761  00A0               	movwf	??_main
   738  0762                     u617:
   739  0762  0BA0               	decfsz	??_main,f
   740  0763  2F62               	goto	u617
   741  0764  0BA1               	decfsz	??_main+1,f
   742  0765  2F62               	goto	u617
   743  0766  0BA2               	decfsz	??_main+2,f
   744  0767  2F62               	goto	u617
   745  0768  0000               	nop
   746  0769                     l1211:
   747                           
   748                           ;LCD_Teclado.c: 87:         for(i=0;i<4;i++)
   749  0769  1283               	bcf	3,5	;RP0=0, select bank0
   750  076A  1303               	bcf	3,6	;RP1=0, select bank0
   751  076B  01A4               	clrf	main@i
   752  076C                     l1217:
   753                           
   754                           ;LCD_Teclado.c: 88:           {;LCD_Teclado.c: 89:             _delay((unsigned long)((3
      +                          00)*(4000000/4000.0)));
   755  076C  3002               	movlw	2
   756  076D  1283               	bcf	3,5	;RP0=0, select bank0
   757  076E  1303               	bcf	3,6	;RP1=0, select bank0
   758  076F  00A2               	movwf	??_main+2
   759  0770  3086               	movlw	134
   760  0771  00A1               	movwf	??_main+1
   761  0772  3098               	movlw	152
   762  0773  00A0               	movwf	??_main
   763  0774                     u627:
   764  0774  0BA0               	decfsz	??_main,f
   765  0775  2F74               	goto	u627
   766  0776  0BA1               	decfsz	??_main+1,f
   767  0777  2F74               	goto	u627
   768  0778  0BA2               	decfsz	??_main+2,f
   769  0779  2F74               	goto	u627
   770  077A  2F7B               	nop2
   771                           
   772                           ;LCD_Teclado.c: 90:             RA1^=1;
   773  077B  1283               	bcf	3,5	;RP0=0, select bank0
   774  077C  1303               	bcf	3,6	;RP1=0, select bank0
   775  077D  3002               	movlw	2
   776  077E  0685               	xorwf	5,f
   777                           
   778                           ;LCD_Teclado.c: 91:             _delay((unsigned long)((300)*(4000000/4000.0)));
   779  077F  3002               	movlw	2
   780  0780  1283               	bcf	3,5	;RP0=0, select bank0
   781  0781  1303               	bcf	3,6	;RP1=0, select bank0
   782  0782  00A2               	movwf	??_main+2
   783  0783  3086               	movlw	134
   784  0784  00A1               	movwf	??_main+1
   785  0785  3098               	movlw	152
   786  0786  00A0               	movwf	??_main
   787  0787                     u637:
   788  0787  0BA0               	decfsz	??_main,f
   789  0788  2F87               	goto	u637
   790  0789  0BA1               	decfsz	??_main+1,f
   791  078A  2F87               	goto	u637
   792  078B  0BA2               	decfsz	??_main+2,f
   793  078C  2F87               	goto	u637
   794  078D  2F8E               	nop2
   795                           
   796                           ;LCD_Teclado.c: 92:             RA2^=1;
   797  078E  1283               	bcf	3,5	;RP0=0, select bank0
   798  078F  1303               	bcf	3,6	;RP1=0, select bank0
   799  0790  3004               	movlw	4
   800  0791  0685               	xorwf	5,f
   801                           
   802                           ;LCD_Teclado.c: 93:             _delay((unsigned long)((300)*(4000000/4000.0)));
   803  0792  3002               	movlw	2
   804  0793  1283               	bcf	3,5	;RP0=0, select bank0
   805  0794  1303               	bcf	3,6	;RP1=0, select bank0
   806  0795  00A2               	movwf	??_main+2
   807  0796  3086               	movlw	134
   808  0797  00A1               	movwf	??_main+1
   809  0798  3098               	movlw	152
   810  0799  00A0               	movwf	??_main
   811  079A                     u647:
   812  079A  0BA0               	decfsz	??_main,f
   813  079B  2F9A               	goto	u647
   814  079C  0BA1               	decfsz	??_main+1,f
   815  079D  2F9A               	goto	u647
   816  079E  0BA2               	decfsz	??_main+2,f
   817  079F  2F9A               	goto	u647
   818  07A0  2FA1               	nop2
   819  07A1                     l1219:
   820                           
   821                           ;LCD_Teclado.c: 94:             PORTA^=0x40;
   822  07A1  3040               	movlw	64
   823  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   824  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   825  07A4  00A0               	movwf	??_main
   826  07A5  0820               	movf	??_main,w
   827  07A6  0685               	xorwf	5,f	;volatile
   828  07A7                     l1221:
   829                           
   830                           ;LCD_Teclado.c: 95:             _delay((unsigned long)((300)*(4000000/4000.0)));
   831  07A7  3002               	movlw	2
   832  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   833  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   834  07AA  00A2               	movwf	??_main+2
   835  07AB  3086               	movlw	134
   836  07AC  00A1               	movwf	??_main+1
   837  07AD  3098               	movlw	152
   838  07AE  00A0               	movwf	??_main
   839  07AF                     u657:
   840  07AF  0BA0               	decfsz	??_main,f
   841  07B0  2FAF               	goto	u657
   842  07B1  0BA1               	decfsz	??_main+1,f
   843  07B2  2FAF               	goto	u657
   844  07B3  0BA2               	decfsz	??_main+2,f
   845  07B4  2FAF               	goto	u657
   846  07B5  2FB6               	nop2
   847                           
   848                           ;LCD_Teclado.c: 96:             PORTA^=0x80;
   849  07B6  3080               	movlw	128
   850  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   851  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   852  07B9  00A0               	movwf	??_main
   853  07BA  0820               	movf	??_main,w
   854  07BB  0685               	xorwf	5,f	;volatile
   855  07BC                     l1223:
   856                           
   857                           ;LCD_Teclado.c: 97:             _delay((unsigned long)((300)*(4000000/4000.0)));
   858  07BC  3002               	movlw	2
   859  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   860  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   861  07BF  00A2               	movwf	??_main+2
   862  07C0  3086               	movlw	134
   863  07C1  00A1               	movwf	??_main+1
   864  07C2  3098               	movlw	152
   865  07C3  00A0               	movwf	??_main
   866  07C4                     u667:
   867  07C4  0BA0               	decfsz	??_main,f
   868  07C5  2FC4               	goto	u667
   869  07C6  0BA1               	decfsz	??_main+1,f
   870  07C7  2FC4               	goto	u667
   871  07C8  0BA2               	decfsz	??_main+2,f
   872  07C9  2FC4               	goto	u667
   873  07CA  2FCB               	nop2
   874  07CB                     l1225:
   875                           
   876                           ;LCD_Teclado.c: 98:           }
   877  07CB  3001               	movlw	1
   878  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   879  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   880  07CE  00A0               	movwf	??_main
   881  07CF  0820               	movf	??_main,w
   882  07D0  07A4               	addwf	main@i,f
   883  07D1  3004               	movlw	4
   884  07D2  0224               	subwf	main@i,w
   885  07D3  1C03               	skipc
   886  07D4  2FD6               	goto	u551
   887  07D5  2FD7               	goto	u550
   888  07D6                     u551:
   889  07D6  2F6C               	goto	l1217
   890  07D7                     u550:
   891  07D7                     l1227:
   892                           
   893                           ;LCD_Teclado.c: 102:         lcd_cmd(0x01);
   894  07D7  3001               	movlw	1
   895  07D8  2553               	fcall	_lcd_cmd
   896                           
   897                           ;LCD_Teclado.c: 103:         lcd_cmd(0x80 +2);
   898  07D9  3082               	movlw	130
   899  07DA  2553               	fcall	_lcd_cmd
   900  07DB                     l1229:
   901                           
   902                           ;LCD_Teclado.c: 104:         lcd_str("Teste Teclado");
   903  07DB  3005               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   904  07DC  253D               	fcall	_lcd_str
   905  07DD                     l1231:
   906                           
   907                           ;LCD_Teclado.c: 106:         lcd_cmd(0xC0 +1);
   908  07DD  30C1               	movlw	193
   909  07DE  2553               	fcall	_lcd_cmd
   910  07DF                     l1233:
   911                           
   912                           ;LCD_Teclado.c: 108:         i=0;
   913  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   914  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   915  07E1  01A4               	clrf	main@i
   916                           
   917                           ;LCD_Teclado.c: 109:         while(i<14)
   918  07E2  2FF6               	goto	l1241
   919  07E3                     l1235:
   920                           
   921                           ;LCD_Teclado.c: 110:         {;LCD_Teclado.c: 111:             tecla = tc_tecla(3000);
   922  07E3  30B8               	movlw	184
   923  07E4  00F4               	movwf	tc_tecla@timeout
   924  07E5  300B               	movlw	11
   925  07E6  00F5               	movwf	tc_tecla@timeout+1
   926  07E7  25EE               	fcall	_tc_tecla
   927  07E8  1283               	bcf	3,5	;RP0=0, select bank0
   928  07E9  1303               	bcf	3,6	;RP1=0, select bank0
   929  07EA  00A0               	movwf	??_main
   930  07EB  0820               	movf	??_main,w
   931  07EC  00A3               	movwf	main@tecla
   932  07ED                     l1237:
   933                           
   934                           ;LCD_Teclado.c: 112:             lcd_dat(tecla+0x30);
   935  07ED  0823               	movf	main@tecla,w
   936  07EE  3E30               	addlw	48
   937  07EF  2575               	fcall	_lcd_dat
   938  07F0                     l1239:
   939                           
   940                           ;LCD_Teclado.c: 113:             i++;
   941  07F0  3001               	movlw	1
   942  07F1  1283               	bcf	3,5	;RP0=0, select bank0
   943  07F2  1303               	bcf	3,6	;RP1=0, select bank0
   944  07F3  00A0               	movwf	??_main
   945  07F4  0820               	movf	??_main,w
   946  07F5  07A4               	addwf	main@i,f
   947  07F6                     l1241:
   948                           
   949                           ;LCD_Teclado.c: 109:         while(i<14)
   950  07F6  300E               	movlw	14
   951  07F7  0224               	subwf	main@i,w
   952  07F8  1C03               	skipc
   953  07F9  2FFB               	goto	u561
   954  07FA  2FFC               	goto	u560
   955  07FB                     u561:
   956  07FB  2FE3               	goto	l1235
   957  07FC                     u560:
   958  07FC  2ECA               	goto	l1139
   959  07FD  2800               	ljmp	start
   960  07FE                     __end_of_main:
   961                           
   962                           	psect	text1
   963  05EE                     __ptext1:	
   964 ;; *************** function _tc_tecla *****************
   965 ;; Defined at:
   966 ;;		line 26 in file "teclado.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;  timeout         2    4[COMMON] unsigned int 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  to              2    8[COMMON] unsigned int 
   971 ;;  i               1   12[COMMON] unsigned char 
   972 ;;  ret             1   11[COMMON] unsigned char 
   973 ;;  tmp             1   10[COMMON] unsigned char 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      unsigned char 
   976 ;; Registers used:
   977 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   983 ;;      Params:         2       0       0       0
   984 ;;      Locals:         5       0       0       0
   985 ;;      Temps:          2       0       0       0
   986 ;;      Totals:         9       0       0       0
   987 ;;Total ram usage:        9 bytes
   988 ;; Hardware stack levels used: 1
   989 ;; Hardware stack levels required when called: 1
   990 ;; This function calls:
   991 ;;		___bmul
   992 ;; This function is called by:
   993 ;;		_main
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           
   998                           ;psect for function _tc_tecla
   999  05EE                     _tc_tecla:
  1000  05EE                     l1065:	
  1001                           ;incstack = 0
  1002                           ; Regs used in _tc_tecla: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1003                           
  1004                           
  1005                           ;teclado.c: 26: unsigned char tc_tecla(unsigned int timeout);teclado.c: 27: {;teclado.c:
      +                           28:   unsigned int to=0;
  1006  05EE  01F8               	clrf	tc_tecla@to
  1007  05EF  01F9               	clrf	tc_tecla@to+1
  1008                           
  1009                           ;teclado.c: 29:   unsigned char i;;teclado.c: 30:   unsigned char ret=0;
  1010  05F0  01FB               	clrf	tc_tecla@ret
  1011  05F1                     l1067:
  1012                           
  1013                           ;teclado.c: 31:   unsigned char tmp=PORTA;
  1014  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  1015  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  1016  05F3  0805               	movf	5,w	;volatile
  1017  05F4  00F6               	movwf	??_tc_tecla
  1018  05F5  0876               	movf	??_tc_tecla,w
  1019  05F6  00FA               	movwf	tc_tecla@tmp
  1020                           
  1021                           ;teclado.c: 33:   while(((to < timeout)||(!timeout))&&(!ret))
  1022  05F7  2E8F               	goto	l89
  1023  05F8                     l1069:
  1024                           
  1025                           ;teclado.c: 34:   {;teclado.c: 35:     for(i=0;i<4;i++)
  1026  05F8  01FC               	clrf	tc_tecla@i
  1027  05F9                     l1075:
  1028                           
  1029                           ;teclado.c: 36:     {;teclado.c: 37:       PORTA|=linha[i];
  1030  05F9  087C               	movf	tc_tecla@i,w
  1031  05FA  3E01               	addlw	low ((_linha-__stringbase)| (0+32768))
  1032  05FB  0084               	movwf	4
  1033  05FC  2001               	fcall	stringdir
  1034  05FD  00F6               	movwf	??_tc_tecla
  1035  05FE  0876               	movf	??_tc_tecla,w
  1036  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1037  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1038  0601  0485               	iorwf	5,f	;volatile
  1039  0602                     l1077:
  1040                           
  1041                           ;teclado.c: 39:       if(RB7){
  1042  0602  1F86               	btfss	6,7	;volatile
  1043  0603  2E05               	goto	u361
  1044  0604  2E06               	goto	u360
  1045  0605                     u361:
  1046  0605  2E27               	goto	l93
  1047  0606                     u360:
  1048  0606                     l1079:
  1049                           
  1050                           ;teclado.c: 40:           _delay((unsigned long)((20)*(4000000/4000.0)));
  1051  0606  301A               	movlw	26
  1052  0607  00F7               	movwf	??_tc_tecla+1
  1053  0608  30F8               	movlw	248
  1054  0609  00F6               	movwf	??_tc_tecla
  1055  060A                     u677:
  1056  060A  0BF6               	decfsz	??_tc_tecla,f
  1057  060B  2E0A               	goto	u677
  1058  060C  0BF7               	decfsz	??_tc_tecla+1,f
  1059  060D  2E0A               	goto	u677
  1060  060E  0000               	nop
  1061  060F                     l1081:
  1062                           
  1063                           ;teclado.c: 41:           if(RB7)
  1064  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1065  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1066  0611  1F86               	btfss	6,7	;volatile
  1067  0612  2E14               	goto	u371
  1068  0613  2E15               	goto	u370
  1069  0614                     u371:
  1070  0614  2E27               	goto	l93
  1071  0615                     u370:
  1072  0615  2E20               	goto	l1087
  1073  0616                     l1085:
  1074                           
  1075                           ;teclado.c: 44:                 ret = 1+(i*3);
  1076  0616  3003               	movlw	3
  1077  0617  00F6               	movwf	??_tc_tecla
  1078  0618  0876               	movf	??_tc_tecla,w
  1079  0619  00F0               	movwf	___bmul@multiplicand
  1080  061A  087C               	movf	tc_tecla@i,w
  1081  061B  2528               	fcall	___bmul
  1082  061C  3E01               	addlw	1
  1083  061D  00F7               	movwf	??_tc_tecla+1
  1084  061E  0877               	movf	??_tc_tecla+1,w
  1085  061F  00FB               	movwf	tc_tecla@ret
  1086  0620                     l1087:
  1087                           
  1088                           ;teclado.c: 43:                 while(RB7)
  1089  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1090  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1091  0622  1B86               	btfsc	6,7	;volatile
  1092  0623  2E25               	goto	u381
  1093  0624  2E26               	goto	u380
  1094  0625                     u381:
  1095  0625  2E16               	goto	l1085
  1096  0626                     u380:
  1097  0626  2E80               	goto	l1113
  1098  0627                     l93:	
  1099                           ;teclado.c: 47:         }
  1100                           
  1101                           
  1102                           ;teclado.c: 49:       if(RB6){
  1103  0627  1F06               	btfss	6,6	;volatile
  1104  0628  2E2A               	goto	u391
  1105  0629  2E2B               	goto	u390
  1106  062A                     u391:
  1107  062A  2E4C               	goto	l98
  1108  062B                     u390:
  1109  062B                     l1089:
  1110                           
  1111                           ;teclado.c: 50:           _delay((unsigned long)((20)*(4000000/4000.0)));
  1112  062B  301A               	movlw	26
  1113  062C  00F7               	movwf	??_tc_tecla+1
  1114  062D  30F8               	movlw	248
  1115  062E  00F6               	movwf	??_tc_tecla
  1116  062F                     u687:
  1117  062F  0BF6               	decfsz	??_tc_tecla,f
  1118  0630  2E2F               	goto	u687
  1119  0631  0BF7               	decfsz	??_tc_tecla+1,f
  1120  0632  2E2F               	goto	u687
  1121  0633  0000               	nop
  1122  0634                     l1091:
  1123                           
  1124                           ;teclado.c: 51:           if(RB6)
  1125  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0636  1F06               	btfss	6,6	;volatile
  1128  0637  2E39               	goto	u401
  1129  0638  2E3A               	goto	u400
  1130  0639                     u401:
  1131  0639  2E4C               	goto	l98
  1132  063A                     u400:
  1133  063A  2E45               	goto	l1097
  1134  063B                     l1095:
  1135                           
  1136                           ;teclado.c: 54:               ret = 2+(i*3);
  1137  063B  3003               	movlw	3
  1138  063C  00F6               	movwf	??_tc_tecla
  1139  063D  0876               	movf	??_tc_tecla,w
  1140  063E  00F0               	movwf	___bmul@multiplicand
  1141  063F  087C               	movf	tc_tecla@i,w
  1142  0640  2528               	fcall	___bmul
  1143  0641  3E02               	addlw	2
  1144  0642  00F7               	movwf	??_tc_tecla+1
  1145  0643  0877               	movf	??_tc_tecla+1,w
  1146  0644  00FB               	movwf	tc_tecla@ret
  1147  0645                     l1097:
  1148                           
  1149                           ;teclado.c: 53:               while(RB6)
  1150  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1151  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1152  0647  1B06               	btfsc	6,6	;volatile
  1153  0648  2E4A               	goto	u411
  1154  0649  2E4B               	goto	u410
  1155  064A                     u411:
  1156  064A  2E3B               	goto	l1095
  1157  064B                     u410:
  1158  064B  2E80               	goto	l1113
  1159  064C                     l98:	
  1160                           ;teclado.c: 57:         }
  1161                           
  1162                           
  1163                           ;teclado.c: 59:       if(RB5){
  1164  064C  1E86               	btfss	6,5	;volatile
  1165  064D  2E4F               	goto	u421
  1166  064E  2E50               	goto	u420
  1167  064F                     u421:
  1168  064F  2E6E               	goto	l1107
  1169  0650                     u420:
  1170  0650                     l1099:
  1171                           
  1172                           ;teclado.c: 60:         _delay((unsigned long)((20)*(4000000/4000.0)));
  1173  0650  301A               	movlw	26
  1174  0651  00F7               	movwf	??_tc_tecla+1
  1175  0652  30F8               	movlw	248
  1176  0653  00F6               	movwf	??_tc_tecla
  1177  0654                     u697:
  1178  0654  0BF6               	decfsz	??_tc_tecla,f
  1179  0655  2E54               	goto	u697
  1180  0656  0BF7               	decfsz	??_tc_tecla+1,f
  1181  0657  2E54               	goto	u697
  1182  0658  0000               	nop
  1183  0659                     l1101:
  1184                           
  1185                           ;teclado.c: 61:             if(RB5)
  1186  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1187  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1188  065B  1E86               	btfss	6,5	;volatile
  1189  065C  2E5E               	goto	u431
  1190  065D  2E5F               	goto	u430
  1191  065E                     u431:
  1192  065E  2E6E               	goto	l1107
  1193  065F                     u430:
  1194  065F                     l105:
  1195  065F  1A86               	btfsc	6,5	;volatile
  1196  0660  2E62               	goto	u441
  1197  0661  2E63               	goto	u440
  1198  0662                     u441:
  1199  0662  2E5F               	goto	l105
  1200  0663                     u440:
  1201  0663                     l1105:
  1202                           
  1203                           ;teclado.c: 64:               ret= 3+(i*3);
  1204  0663  3003               	movlw	3
  1205  0664  00F6               	movwf	??_tc_tecla
  1206  0665  0876               	movf	??_tc_tecla,w
  1207  0666  00F0               	movwf	___bmul@multiplicand
  1208  0667  087C               	movf	tc_tecla@i,w
  1209  0668  2528               	fcall	___bmul
  1210  0669  3E03               	addlw	3
  1211  066A  00F7               	movwf	??_tc_tecla+1
  1212  066B  0877               	movf	??_tc_tecla+1,w
  1213  066C  00FB               	movwf	tc_tecla@ret
  1214                           
  1215                           ;teclado.c: 65:               break;
  1216  066D  2E80               	goto	l1113
  1217  066E                     l1107:
  1218                           
  1219                           ;teclado.c: 69:       PORTA&=~linha[i];
  1220  066E  087C               	movf	tc_tecla@i,w
  1221  066F  3E01               	addlw	low ((_linha-__stringbase)| (0+32768))
  1222  0670  0084               	movwf	4
  1223  0671  2001               	fcall	stringdir
  1224  0672  3AFF               	xorlw	255
  1225  0673  00F6               	movwf	??_tc_tecla
  1226  0674  0876               	movf	??_tc_tecla,w
  1227  0675  0585               	andwf	5,f	;volatile
  1228  0676                     l1109:
  1229                           
  1230                           ;teclado.c: 70:     }
  1231  0676  3001               	movlw	1
  1232  0677  00F6               	movwf	??_tc_tecla
  1233  0678  0876               	movf	??_tc_tecla,w
  1234  0679  07FC               	addwf	tc_tecla@i,f
  1235  067A                     l1111:
  1236  067A  3004               	movlw	4
  1237  067B  027C               	subwf	tc_tecla@i,w
  1238  067C  1C03               	skipc
  1239  067D  2E7F               	goto	u451
  1240  067E  2E80               	goto	u450
  1241  067F                     u451:
  1242  067F  2DF9               	goto	l1075
  1243  0680                     u450:
  1244  0680                     l1113:
  1245                           
  1246                           ;teclado.c: 71:     _delay((unsigned long)((20)*(4000000/4000.0)));
  1247  0680  301A               	movlw	26
  1248  0681  00F7               	movwf	??_tc_tecla+1
  1249  0682  30F8               	movlw	248
  1250  0683  00F6               	movwf	??_tc_tecla
  1251  0684                     u707:
  1252  0684  0BF6               	decfsz	??_tc_tecla,f
  1253  0685  2E84               	goto	u707
  1254  0686  0BF7               	decfsz	??_tc_tecla+1,f
  1255  0687  2E84               	goto	u707
  1256  0688  0000               	nop
  1257                           
  1258                           ;teclado.c: 72:     to+=5;
  1259  0689  3005               	movlw	5
  1260  068A  07F8               	addwf	tc_tecla@to,f
  1261  068B  1803               	skipnc
  1262  068C  0AF9               	incf	tc_tecla@to+1,f
  1263  068D  3000               	movlw	0
  1264  068E  07F9               	addwf	tc_tecla@to+1,f
  1265  068F                     l89:	
  1266                           ;teclado.c: 73:   }
  1267                           
  1268                           
  1269                           ;teclado.c: 33:   while(((to < timeout)||(!timeout))&&(!ret))
  1270  068F  0875               	movf	tc_tecla@timeout+1,w
  1271  0690  0279               	subwf	tc_tecla@to+1,w
  1272  0691  1D03               	skipz
  1273  0692  2E95               	goto	u465
  1274  0693  0874               	movf	tc_tecla@timeout,w
  1275  0694  0278               	subwf	tc_tecla@to,w
  1276  0695                     u465:
  1277  0695  1C03               	skipc
  1278  0696  2E98               	goto	u461
  1279  0697  2E99               	goto	u460
  1280  0698                     u461:
  1281  0698  2E9F               	goto	l1117
  1282  0699                     u460:
  1283  0699                     l1115:
  1284  0699  0874               	movf	tc_tecla@timeout,w
  1285  069A  0475               	iorwf	tc_tecla@timeout+1,w
  1286  069B  1D03               	btfss	3,2
  1287  069C  2E9E               	goto	u471
  1288  069D  2E9F               	goto	u470
  1289  069E                     u471:
  1290  069E  2EA4               	goto	l1119
  1291  069F                     u470:
  1292  069F                     l1117:
  1293  069F  087B               	movf	tc_tecla@ret,w
  1294  06A0  1903               	btfsc	3,2
  1295  06A1  2EA3               	goto	u481
  1296  06A2  2EA4               	goto	u480
  1297  06A3                     u481:
  1298  06A3  2DF8               	goto	l1069
  1299  06A4                     u480:
  1300  06A4                     l1119:
  1301                           
  1302                           ;teclado.c: 75:   if(!ret)ret=255;
  1303  06A4  087B               	movf	tc_tecla@ret,w
  1304  06A5  1D03               	btfss	3,2
  1305  06A6  2EA8               	goto	u491
  1306  06A7  2EA9               	goto	u490
  1307  06A8                     u491:
  1308  06A8  2EAD               	goto	l1123
  1309  06A9                     u490:
  1310  06A9                     l1121:
  1311  06A9  30FF               	movlw	255
  1312  06AA  00F6               	movwf	??_tc_tecla
  1313  06AB  0876               	movf	??_tc_tecla,w
  1314  06AC  00FB               	movwf	tc_tecla@ret
  1315  06AD                     l1123:
  1316                           
  1317                           ;teclado.c: 76:   if(ret == 11)ret=0;
  1318  06AD  300B               	movlw	11
  1319  06AE  067B               	xorwf	tc_tecla@ret,w
  1320  06AF  1D03               	btfss	3,2
  1321  06B0  2EB2               	goto	u501
  1322  06B1  2EB3               	goto	u500
  1323  06B2                     u501:
  1324  06B2  2EB4               	goto	l1127
  1325  06B3                     u500:
  1326  06B3                     l1125:
  1327  06B3  01FB               	clrf	tc_tecla@ret
  1328  06B4                     l1127:
  1329                           
  1330                           ;teclado.c: 77:   PORTA=tmp;
  1331  06B4  087A               	movf	tc_tecla@tmp,w
  1332  06B5  1283               	bcf	3,5	;RP0=0, select bank0
  1333  06B6  1303               	bcf	3,6	;RP1=0, select bank0
  1334  06B7  0085               	movwf	5	;volatile
  1335  06B8                     l1129:
  1336                           
  1337                           ;teclado.c: 78:   return ret;
  1338  06B8  087B               	movf	tc_tecla@ret,w
  1339  06B9                     l115:
  1340  06B9  0008               	return
  1341  06BA                     __end_of_tc_tecla:
  1342                           
  1343                           	psect	text2
  1344  0528                     __ptext2:	
  1345 ;; *************** function ___bmul *****************
  1346 ;; Defined at:
  1347 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c90\common\Umul8.c"
  1348 ;; Parameters:    Size  Location     Type
  1349 ;;  multiplier      1    wreg     unsigned char 
  1350 ;;  multiplicand    1    0[COMMON] unsigned char 
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;  multiplier      1    3[COMMON] unsigned char 
  1353 ;;  product         1    2[COMMON] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      unsigned char 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1363 ;;      Params:         1       0       0       0
  1364 ;;      Locals:         2       0       0       0
  1365 ;;      Temps:          1       0       0       0
  1366 ;;      Totals:         4       0       0       0
  1367 ;;Total ram usage:        4 bytes
  1368 ;; Hardware stack levels used: 1
  1369 ;; This function calls:
  1370 ;;		Nothing
  1371 ;; This function is called by:
  1372 ;;		_tc_tecla
  1373 ;; This function uses a non-reentrant model
  1374 ;;
  1375                           
  1376                           
  1377                           ;psect for function ___bmul
  1378  0528                     ___bmul:
  1379                           
  1380                           ;incstack = 0
  1381                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  1382                           ;___bmul@multiplier stored from wreg
  1383  0528  00F3               	movwf	___bmul@multiplier
  1384  0529                     l1019:
  1385  0529  01F2               	clrf	___bmul@product
  1386  052A                     l1021:
  1387  052A  1C73               	btfss	___bmul@multiplier,0
  1388  052B  2D2D               	goto	u331
  1389  052C  2D2E               	goto	u330
  1390  052D                     u331:
  1391  052D  2D32               	goto	l1025
  1392  052E                     u330:
  1393  052E                     l1023:
  1394  052E  0870               	movf	___bmul@multiplicand,w
  1395  052F  00F1               	movwf	??___bmul
  1396  0530  0871               	movf	??___bmul,w
  1397  0531  07F2               	addwf	___bmul@product,f
  1398  0532                     l1025:
  1399  0532  1003               	clrc
  1400  0533  0DF0               	rlf	___bmul@multiplicand,f
  1401  0534                     l1027:
  1402  0534  1003               	clrc
  1403  0535  0CF3               	rrf	___bmul@multiplier,f
  1404  0536  0873               	movf	___bmul@multiplier,w
  1405  0537  1D03               	btfss	3,2
  1406  0538  2D3A               	goto	u341
  1407  0539  2D3B               	goto	u340
  1408  053A                     u341:
  1409  053A  2D2A               	goto	l1021
  1410  053B                     u340:
  1411  053B                     l1029:
  1412  053B  0872               	movf	___bmul@product,w
  1413  053C                     l227:
  1414  053C  0008               	return
  1415  053D                     __end_of___bmul:
  1416                           
  1417                           	psect	text3
  1418  053D                     __ptext3:	
  1419 ;; *************** function _lcd_str *****************
  1420 ;; Defined at:
  1421 ;;		line 79 in file "lcd.c"
  1422 ;; Parameters:    Size  Location     Type
  1423 ;;  str             1    wreg     PTR const unsigned char 
  1424 ;;		 -> STR_5(14), STR_4(11), STR_3(3), STR_2(10), 
  1425 ;;		 -> STR_1(10), 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  str             1    8[COMMON] PTR const unsigned char 
  1428 ;;		 -> STR_5(14), STR_4(11), STR_3(3), STR_2(10), 
  1429 ;;		 -> STR_1(10), 
  1430 ;;  i               1    7[COMMON] unsigned char 
  1431 ;; Return value:  Size  Location     Type
  1432 ;;                  1    wreg      void 
  1433 ;; Registers used:
  1434 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1435 ;; Tracked objects:
  1436 ;;		On entry : 0/0
  1437 ;;		On exit  : 0/0
  1438 ;;		Unchanged: 0/0
  1439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1440 ;;      Params:         0       0       0       0
  1441 ;;      Locals:         2       0       0       0
  1442 ;;      Temps:          1       0       0       0
  1443 ;;      Totals:         3       0       0       0
  1444 ;;Total ram usage:        3 bytes
  1445 ;; Hardware stack levels used: 1
  1446 ;; Hardware stack levels required when called: 2
  1447 ;; This function calls:
  1448 ;;		_lcd_dat
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _lcd_str
  1456  053D                     _lcd_str:
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _lcd_str: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1460                           ;lcd_str@str stored from wreg
  1461  053D  00F8               	movwf	lcd_str@str
  1462  053E                     l1057:
  1463                           
  1464                           ;lcd.c: 79: void lcd_str(const char* str);lcd.c: 80: {;lcd.c: 81:  unsigned char i=0;
  1465  053E  01F7               	clrf	lcd_str@i
  1466                           
  1467                           ;lcd.c: 83:  while(str[i])
  1468  053F  2D49               	goto	l1063
  1469  0540                     l1059:
  1470                           
  1471                           ;lcd.c: 84:  {;lcd.c: 85:    lcd_dat(str[i]);
  1472  0540  0877               	movf	lcd_str@i,w
  1473  0541  0778               	addwf	lcd_str@str,w
  1474  0542  0084               	movwf	4
  1475  0543  2001               	fcall	stringdir
  1476  0544  2575               	fcall	_lcd_dat
  1477  0545                     l1061:
  1478                           
  1479                           ;lcd.c: 86:    i++;
  1480  0545  3001               	movlw	1
  1481  0546  00F6               	movwf	??_lcd_str
  1482  0547  0876               	movf	??_lcd_str,w
  1483  0548  07F7               	addwf	lcd_str@i,f
  1484  0549                     l1063:
  1485                           
  1486                           ;lcd.c: 83:  while(str[i])
  1487  0549  0877               	movf	lcd_str@i,w
  1488  054A  0778               	addwf	lcd_str@str,w
  1489  054B  0084               	movwf	4
  1490  054C  2001               	fcall	stringdir
  1491  054D  3A00               	xorlw	0
  1492  054E  1D03               	skipz
  1493  054F  2D51               	goto	u351
  1494  0550  2D52               	goto	u350
  1495  0551                     u351:
  1496  0551  2D40               	goto	l1059
  1497  0552                     u350:
  1498  0552                     l74:
  1499  0552  0008               	return
  1500  0553                     __end_of_lcd_str:
  1501                           
  1502                           	psect	text4
  1503  0575                     __ptext4:	
  1504 ;; *************** function _lcd_dat *****************
  1505 ;; Defined at:
  1506 ;;		line 49 in file "lcd.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  val             1    wreg     unsigned char 
  1509 ;; Auto vars:     Size  Location     Type
  1510 ;;  val             1    5[COMMON] unsigned char 
  1511 ;; Return value:  Size  Location     Type
  1512 ;;                  1    wreg      void 
  1513 ;; Registers used:
  1514 ;;		wreg, status,2, status,0, pclath, cstack
  1515 ;; Tracked objects:
  1516 ;;		On entry : 0/0
  1517 ;;		On exit  : 0/0
  1518 ;;		Unchanged: 0/0
  1519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1520 ;;      Params:         0       0       0       0
  1521 ;;      Locals:         1       0       0       0
  1522 ;;      Temps:          2       0       0       0
  1523 ;;      Totals:         3       0       0       0
  1524 ;;Total ram usage:        3 bytes
  1525 ;; Hardware stack levels used: 1
  1526 ;; Hardware stack levels required when called: 1
  1527 ;; This function calls:
  1528 ;;		_lcd_wr
  1529 ;; This function is called by:
  1530 ;;		_main
  1531 ;;		_lcd_str
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _lcd_dat
  1537  0575                     _lcd_dat:
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _lcd_dat: [wreg+status,2+status,0+pclath+cstack]
  1541                           ;lcd_dat@val stored from wreg
  1542  0575  00F5               	movwf	lcd_dat@val
  1543  0576                     l1005:
  1544                           
  1545                           ;lcd.c: 49: void lcd_dat(unsigned char val);lcd.c: 50: {;lcd.c: 51:  RA0=1;
  1546  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1547  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0578  1405               	bsf	5,0	;volatile
  1549  0579                     l1007:
  1550                           
  1551                           ;lcd.c: 52:         lcd_wr(val);
  1552  0579  0875               	movf	lcd_dat@val,w
  1553  057A  2597               	fcall	_lcd_wr
  1554  057B                     l1009:
  1555                           
  1556                           ;lcd.c: 53:         RB3=1;
  1557  057B  1283               	bcf	3,5	;RP0=0, select bank0
  1558  057C  1303               	bcf	3,6	;RP1=0, select bank0
  1559  057D  1586               	bsf	6,3	;volatile
  1560  057E                     l1011:
  1561                           
  1562                           ;lcd.c: 54:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1563  057E  3004               	movlw	4
  1564  057F  00F4               	movwf	??_lcd_dat+1
  1565  0580  30E4               	movlw	228
  1566  0581  00F3               	movwf	??_lcd_dat
  1567  0582                     u717:
  1568  0582  0BF3               	decfsz	??_lcd_dat,f
  1569  0583  2D82               	goto	u717
  1570  0584  0BF4               	decfsz	??_lcd_dat+1,f
  1571  0585  2D82               	goto	u717
  1572  0586  0000               	nop
  1573  0587                     l1013:
  1574                           
  1575                           ;lcd.c: 55:         RA0=0;
  1576  0587  1283               	bcf	3,5	;RP0=0, select bank0
  1577  0588  1303               	bcf	3,6	;RP1=0, select bank0
  1578  0589  1005               	bcf	5,0	;volatile
  1579  058A                     l1015:
  1580                           
  1581                           ;lcd.c: 56:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1582  058A  3004               	movlw	4
  1583  058B  00F4               	movwf	??_lcd_dat+1
  1584  058C  30E4               	movlw	228
  1585  058D  00F3               	movwf	??_lcd_dat
  1586  058E                     u727:
  1587  058E  0BF3               	decfsz	??_lcd_dat,f
  1588  058F  2D8E               	goto	u727
  1589  0590  0BF4               	decfsz	??_lcd_dat+1,f
  1590  0591  2D8E               	goto	u727
  1591  0592  0000               	nop
  1592  0593                     l1017:
  1593                           
  1594                           ;lcd.c: 57:  RA0=1;
  1595  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0595  1405               	bsf	5,0	;volatile
  1598  0596                     l65:
  1599  0596  0008               	return
  1600  0597                     __end_of_lcd_dat:
  1601                           
  1602                           	psect	text5
  1603  05BE                     __ptext5:	
  1604 ;; *************** function _lcd_init *****************
  1605 ;; Defined at:
  1606 ;;		line 60 in file "lcd.c"
  1607 ;; Parameters:    Size  Location     Type
  1608 ;;		None
  1609 ;; Auto vars:     Size  Location     Type
  1610 ;;		None
  1611 ;; Return value:  Size  Location     Type
  1612 ;;                  1    wreg      void 
  1613 ;; Registers used:
  1614 ;;		wreg, status,2, status,0, pclath, cstack
  1615 ;; Tracked objects:
  1616 ;;		On entry : 0/0
  1617 ;;		On exit  : 0/0
  1618 ;;		Unchanged: 0/0
  1619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1620 ;;      Params:         0       0       0       0
  1621 ;;      Locals:         0       0       0       0
  1622 ;;      Temps:          2       0       0       0
  1623 ;;      Totals:         2       0       0       0
  1624 ;;Total ram usage:        2 bytes
  1625 ;; Hardware stack levels used: 1
  1626 ;; Hardware stack levels required when called: 2
  1627 ;; This function calls:
  1628 ;;		_lcd_cmd
  1629 ;; This function is called by:
  1630 ;;		_main
  1631 ;; This function uses a non-reentrant model
  1632 ;;
  1633                           
  1634                           
  1635                           ;psect for function _lcd_init
  1636  05BE                     _lcd_init:
  1637  05BE                     l1033:	
  1638                           ;incstack = 0
  1639                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  1640                           
  1641                           
  1642                           ;lcd.c: 62:  RA0=0;
  1643  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1644  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1645  05C0  1005               	bcf	5,0	;volatile
  1646                           
  1647                           ;lcd.c: 63:  RB3=0;
  1648  05C1  1186               	bcf	6,3	;volatile
  1649  05C2                     l1035:
  1650                           
  1651                           ;lcd.c: 64:  _delay((unsigned long)((20)*(4000000/4000.0)));
  1652  05C2  301A               	movlw	26
  1653  05C3  00F7               	movwf	??_lcd_init+1
  1654  05C4  30F8               	movlw	248
  1655  05C5  00F6               	movwf	??_lcd_init
  1656  05C6                     u737:
  1657  05C6  0BF6               	decfsz	??_lcd_init,f
  1658  05C7  2DC6               	goto	u737
  1659  05C8  0BF7               	decfsz	??_lcd_init+1,f
  1660  05C9  2DC6               	goto	u737
  1661  05CA  0000               	nop
  1662  05CB                     l1037:
  1663                           
  1664                           ;lcd.c: 65:  RA0=1;
  1665  05CB  1283               	bcf	3,5	;RP0=0, select bank0
  1666  05CC  1303               	bcf	3,6	;RP1=0, select bank0
  1667  05CD  1405               	bsf	5,0	;volatile
  1668  05CE                     l1039:
  1669                           
  1670                           ;lcd.c: 67:  lcd_cmd(0x30);
  1671  05CE  3030               	movlw	48
  1672  05CF  2553               	fcall	_lcd_cmd
  1673  05D0                     l1041:
  1674                           
  1675                           ;lcd.c: 68:  _delay((unsigned long)((5)*(4000000/4000.0)));
  1676  05D0  3007               	movlw	7
  1677  05D1  00F7               	movwf	??_lcd_init+1
  1678  05D2  307D               	movlw	125
  1679  05D3  00F6               	movwf	??_lcd_init
  1680  05D4                     u747:
  1681  05D4  0BF6               	decfsz	??_lcd_init,f
  1682  05D5  2DD4               	goto	u747
  1683  05D6  0BF7               	decfsz	??_lcd_init+1,f
  1684  05D7  2DD4               	goto	u747
  1685                           
  1686                           ;lcd.c: 69:  lcd_cmd(0x30);
  1687  05D8  3030               	movlw	48
  1688  05D9  2553               	fcall	_lcd_cmd
  1689  05DA                     l1043:
  1690                           
  1691                           ;lcd.c: 70:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1692  05DA  30C7               	movlw	199
  1693  05DB  00F6               	movwf	??_lcd_init
  1694  05DC                     u757:
  1695  05DC  2DDD               	nop2
  1696  05DD  0BF6               	decfsz	??_lcd_init,f
  1697  05DE  2DDC               	goto	u757
  1698  05DF  2DE0               	nop2
  1699  05E0  2DE1               	nop2
  1700  05E1                     l1045:
  1701                           
  1702                           ;lcd.c: 71:  lcd_cmd(0x38);
  1703  05E1  3038               	movlw	56
  1704  05E2  2553               	fcall	_lcd_cmd
  1705  05E3                     l1047:
  1706                           
  1707                           ;lcd.c: 72:  lcd_cmd(0x08);
  1708  05E3  3008               	movlw	8
  1709  05E4  2553               	fcall	_lcd_cmd
  1710  05E5                     l1049:
  1711                           
  1712                           ;lcd.c: 73:  lcd_cmd(0x0F);
  1713  05E5  300F               	movlw	15
  1714  05E6  2553               	fcall	_lcd_cmd
  1715  05E7                     l1051:
  1716                           
  1717                           ;lcd.c: 74:  lcd_cmd(0x01);
  1718  05E7  3001               	movlw	1
  1719  05E8  2553               	fcall	_lcd_cmd
  1720  05E9                     l1053:
  1721                           
  1722                           ;lcd.c: 75:  lcd_cmd(0x38);
  1723  05E9  3038               	movlw	56
  1724  05EA  2553               	fcall	_lcd_cmd
  1725  05EB                     l1055:
  1726                           
  1727                           ;lcd.c: 76:     lcd_cmd(0x80);
  1728  05EB  3080               	movlw	128
  1729  05EC  2553               	fcall	_lcd_cmd
  1730  05ED                     l68:
  1731  05ED  0008               	return
  1732  05EE                     __end_of_lcd_init:
  1733                           
  1734                           	psect	text6
  1735  0553                     __ptext6:	
  1736 ;; *************** function _lcd_cmd *****************
  1737 ;; Defined at:
  1738 ;;		line 38 in file "lcd.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  val             1    wreg     unsigned char 
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;  val             1    5[COMMON] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0, pclath, cstack
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1752 ;;      Params:         0       0       0       0
  1753 ;;      Locals:         1       0       0       0
  1754 ;;      Temps:          2       0       0       0
  1755 ;;      Totals:         3       0       0       0
  1756 ;;Total ram usage:        3 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 1
  1759 ;; This function calls:
  1760 ;;		_lcd_wr
  1761 ;; This function is called by:
  1762 ;;		_main
  1763 ;;		_lcd_init
  1764 ;; This function uses a non-reentrant model
  1765 ;;
  1766                           
  1767                           
  1768                           ;psect for function _lcd_cmd
  1769  0553                     _lcd_cmd:
  1770                           
  1771                           ;incstack = 0
  1772                           ; Regs used in _lcd_cmd: [wreg+status,2+status,0+pclath+cstack]
  1773                           ;lcd_cmd@val stored from wreg
  1774  0553  00F5               	movwf	lcd_cmd@val
  1775  0554                     l991:
  1776                           
  1777                           ;lcd.c: 38: void lcd_cmd(unsigned char val);lcd.c: 39: {;lcd.c: 40:  RA0=1;
  1778  0554  1283               	bcf	3,5	;RP0=0, select bank0
  1779  0555  1303               	bcf	3,6	;RP1=0, select bank0
  1780  0556  1405               	bsf	5,0	;volatile
  1781  0557                     l993:
  1782                           
  1783                           ;lcd.c: 41:         lcd_wr(val);
  1784  0557  0875               	movf	lcd_cmd@val,w
  1785  0558  2597               	fcall	_lcd_wr
  1786  0559                     l995:
  1787                           
  1788                           ;lcd.c: 42:         RB3=0;
  1789  0559  1283               	bcf	3,5	;RP0=0, select bank0
  1790  055A  1303               	bcf	3,6	;RP1=0, select bank0
  1791  055B  1186               	bcf	6,3	;volatile
  1792  055C                     l997:
  1793                           
  1794                           ;lcd.c: 43:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1795  055C  3004               	movlw	4
  1796  055D  00F4               	movwf	??_lcd_cmd+1
  1797  055E  30E4               	movlw	228
  1798  055F  00F3               	movwf	??_lcd_cmd
  1799  0560                     u767:
  1800  0560  0BF3               	decfsz	??_lcd_cmd,f
  1801  0561  2D60               	goto	u767
  1802  0562  0BF4               	decfsz	??_lcd_cmd+1,f
  1803  0563  2D60               	goto	u767
  1804  0564  0000               	nop
  1805  0565                     l999:
  1806                           
  1807                           ;lcd.c: 44:         RA0=0;
  1808  0565  1283               	bcf	3,5	;RP0=0, select bank0
  1809  0566  1303               	bcf	3,6	;RP1=0, select bank0
  1810  0567  1005               	bcf	5,0	;volatile
  1811  0568                     l1001:
  1812                           
  1813                           ;lcd.c: 45:         _delay((unsigned long)((3)*(4000000/4000.0)));
  1814  0568  3004               	movlw	4
  1815  0569  00F4               	movwf	??_lcd_cmd+1
  1816  056A  30E4               	movlw	228
  1817  056B  00F3               	movwf	??_lcd_cmd
  1818  056C                     u777:
  1819  056C  0BF3               	decfsz	??_lcd_cmd,f
  1820  056D  2D6C               	goto	u777
  1821  056E  0BF4               	decfsz	??_lcd_cmd+1,f
  1822  056F  2D6C               	goto	u777
  1823  0570  0000               	nop
  1824  0571                     l1003:
  1825                           
  1826                           ;lcd.c: 46:  RA0=1;
  1827  0571  1283               	bcf	3,5	;RP0=0, select bank0
  1828  0572  1303               	bcf	3,6	;RP1=0, select bank0
  1829  0573  1405               	bsf	5,0	;volatile
  1830  0574                     l62:
  1831  0574  0008               	return
  1832  0575                     __end_of_lcd_cmd:
  1833                           
  1834                           	psect	text7
  1835  0597                     __ptext7:	
  1836 ;; *************** function _lcd_wr *****************
  1837 ;; Defined at:
  1838 ;;		line 24 in file "lcd.c"
  1839 ;; Parameters:    Size  Location     Type
  1840 ;;  val             1    wreg     unsigned char 
  1841 ;; Auto vars:     Size  Location     Type
  1842 ;;  val             1    1[COMMON] unsigned char 
  1843 ;;  i               1    2[COMMON] unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  1    wreg      void 
  1846 ;; Registers used:
  1847 ;;		wreg, status,2, status,0
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1853 ;;      Params:         0       0       0       0
  1854 ;;      Locals:         2       0       0       0
  1855 ;;      Temps:          1       0       0       0
  1856 ;;      Totals:         3       0       0       0
  1857 ;;Total ram usage:        3 bytes
  1858 ;; Hardware stack levels used: 1
  1859 ;; This function calls:
  1860 ;;		Nothing
  1861 ;; This function is called by:
  1862 ;;		_lcd_cmd
  1863 ;;		_lcd_dat
  1864 ;; This function uses a non-reentrant model
  1865 ;;
  1866                           
  1867                           
  1868                           ;psect for function _lcd_wr
  1869  0597                     _lcd_wr:
  1870                           
  1871                           ;incstack = 0
  1872                           ; Regs used in _lcd_wr: [wreg+status,2+status,0]
  1873                           ;lcd_wr@val stored from wreg
  1874  0597  00F1               	movwf	lcd_wr@val
  1875  0598                     l975:
  1876                           
  1877                           ;lcd.c: 24: void lcd_wr(unsigned char val);lcd.c: 25: {;lcd.c: 26:   unsigned char i;;lc
      +                          d.c: 28:   RB4=0;
  1878  0598  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0599  1303               	bcf	3,6	;RP1=0, select bank0
  1880  059A  1206               	bcf	6,4	;volatile
  1881  059B                     l977:
  1882                           
  1883                           ;lcd.c: 30:   for(i=0;i<8;i++)
  1884  059B  01F2               	clrf	lcd_wr@i
  1885  059C                     l983:
  1886                           
  1887                           ;lcd.c: 31:   {;lcd.c: 32:     RB3=((val>>(7-i))&0x01);
  1888  059C  0871               	movf	lcd_wr@val,w
  1889  059D  00F0               	movwf	??_lcd_wr
  1890  059E  0872               	movf	lcd_wr@i,w
  1891  059F  3C07               	sublw	7
  1892  05A0  3E01               	addlw	1
  1893  05A1  2DA4               	goto	u294
  1894  05A2                     u295:
  1895  05A2  1003               	clrc
  1896  05A3  0CF0               	rrf	??_lcd_wr,f
  1897  05A4                     u294:
  1898  05A4  3EFF               	addlw	-1
  1899  05A5  1D03               	skipz
  1900  05A6  2DA2               	goto	u295
  1901  05A7  1870               	btfsc	??_lcd_wr,0
  1902  05A8  2DAA               	goto	u301
  1903  05A9  2DAE               	goto	u300
  1904  05AA                     u301:
  1905  05AA  1283               	bcf	3,5	;RP0=0, select bank0
  1906  05AB  1303               	bcf	3,6	;RP1=0, select bank0
  1907  05AC  1586               	bsf	6,3	;volatile
  1908  05AD  2DB1               	goto	u314
  1909  05AE                     u300:
  1910  05AE  1283               	bcf	3,5	;RP0=0, select bank0
  1911  05AF  1303               	bcf	3,6	;RP1=0, select bank0
  1912  05B0  1186               	bcf	6,3	;volatile
  1913  05B1                     u314:
  1914  05B1                     l985:
  1915                           
  1916                           ;lcd.c: 33:     RB4=1;
  1917  05B1  1606               	bsf	6,4	;volatile
  1918  05B2                     l987:
  1919                           
  1920                           ;lcd.c: 34:     RB4=0;
  1921  05B2  1206               	bcf	6,4	;volatile
  1922                           
  1923                           ;lcd.c: 35:   }
  1924  05B3  3001               	movlw	1
  1925  05B4  00F0               	movwf	??_lcd_wr
  1926  05B5  0870               	movf	??_lcd_wr,w
  1927  05B6  07F2               	addwf	lcd_wr@i,f
  1928  05B7                     l989:
  1929  05B7  3008               	movlw	8
  1930  05B8  0272               	subwf	lcd_wr@i,w
  1931  05B9  1C03               	skipc
  1932  05BA  2DBC               	goto	u321
  1933  05BB  2DBD               	goto	u320
  1934  05BC                     u321:
  1935  05BC  2D9C               	goto	l983
  1936  05BD                     u320:
  1937  05BD                     l59:
  1938  05BD  0008               	return
  1939  05BE                     __end_of_lcd_wr:
  1940  007E                     btemp	set	126	;btemp
  1941  007E                     wtemp0	set	126
  1942                           
  1943                           	psect	config
  1944                           
  1945                           ;Config register CONFIG @ 0x2007
  1946                           ;	Oscillator Selection bits
  1947                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1948                           ;	Watchdog Timer Enable bit
  1949                           ;	WDTE = OFF, WDT disabled
  1950                           ;	Power-up Timer Enable bit
  1951                           ;	PWRTE = OFF, PWRT disabled
  1952                           ;	RA5/MCLR/VPP Pin Function Select bit
  1953                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  1954                           ;	Brown-out Detect Enable bit
  1955                           ;	BOREN = OFF, BOD disabled
  1956                           ;	Low-Voltage Programming Enable bit
  1957                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1958                           ;	Data EE Memory Code Protection bit
  1959                           ;	CPD = OFF, Data memory code protection off
  1960                           ;	Flash Program Memory Code Protection bit
  1961                           ;	CP = OFF, Code protection off
  1962  2007                     	org	8199
  1963  2007  3F18               	dw	16152

Data Sizes:
    Strings     38
    Constant    4
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      5       5
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    lcd_str@str	PTR const unsigned char  size(1) Largest target is 14
		 -> STR_5(CODE[14]), STR_4(CODE[11]), STR_3(CODE[3]), STR_2(CODE[10]), 
		 -> STR_1(CODE[10]), 


Critical Paths under _main in COMMON

    _main->_tc_tecla
    _tc_tecla->___bmul
    _lcd_str->_lcd_dat
    _lcd_dat->_lcd_wr
    _lcd_init->_lcd_cmd
    _lcd_cmd->_lcd_wr

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    1759
                                              0 BANK0      5     5      0
                            _lcd_cmd
                            _lcd_dat
                           _lcd_init
                            _lcd_str
                           _tc_tecla
 ---------------------------------------------------------------------------------
 (1) _tc_tecla                                             9     7      2     737
                                              4 COMMON     9     7      2
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     320
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              3     3      0     367
                                              6 COMMON     3     3      0
                            _lcd_dat
 ---------------------------------------------------------------------------------
 (2) _lcd_dat                                              3     3      0     112
                                              3 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     112
                                              6 COMMON     2     2      0
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              3     3      0     112
                                              3 COMMON     3     3      0
                             _lcd_wr
 ---------------------------------------------------------------------------------
 (3) _lcd_wr                                               3     3      0      90
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _lcd_cmd
     _lcd_wr
   _lcd_dat
     _lcd_wr
   _lcd_init
     _lcd_cmd
   _lcd_str
     _lcd_dat
   _tc_tecla
     ___bmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      5       5       3        6.2%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       0       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       0      10        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 04 09:39:50 2021

                      pc 0002           ___bmul@product 0072                       l62 0574  
                     l38 0716                       l65 0596                       l74 0552  
                     l59 05BD                       l68 05ED                       l93 0627  
                     l89 068F                       l98 064C                       fsr 0004  
                    l105 065F                      l115 06B9                      l227 053C  
                    l983 059C                      l975 0598                      l991 0554  
                    l985 05B1                      l977 059B                      l993 0557  
                    l987 05B2                      l995 0559                      l989 05B7  
                    l997 055C                      l999 0565                      _RA0 0028  
                    _RA1 0029                      _RA2 002A                      _RB3 0033  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      u300 05AE                      u301 05AA  
                    u320 05BD                      u400 063A                      u321 05BC  
                    u401 0639                      u314 05B1                      u330 052E  
                    u410 064B                      u331 052D                      u411 064A  
                    u340 053B                      u500 06B3                      u420 0650  
                    u341 053A                      u501 06B2                      u421 064F  
                    u350 0552                      u430 065F                      u510 06E0  
                    u351 0551                      u431 065E                      u511 06DF  
                    u440 0663                      u360 0606                      u520 06F4  
                    u441 0662                      u361 0605                      u521 06F3  
                    u450 0680                      u370 0615                      u530 0714  
                    u451 067F                      u371 0614                      u531 0713  
                    u460 0699                      u380 0626                      u540 0730  
                    u461 0698                      u381 0625                      u541 072F  
                    u294 05A4                      u470 069F                      u390 062B  
                    u550 07D7                      u295 05A2                      u471 069E  
                    u391 062A                      u551 07D6                      u607 074D  
                    u480 06A4                      u560 07FC                      u481 06A3  
                    u465 0695                      u561 07FB                      u617 0762  
                    u490 06A9                      u491 06A8                      u707 0684  
                    u627 0774                      u717 0582                      u637 0787  
                    u727 058E                      u647 079A                      u737 05C6  
                    u657 07AF                      u577 06FC                      u747 05D4  
                    u667 07C4                      u587 0720                      u757 05DC  
                    u677 060A                      u597 0736                      u767 0560  
                    u687 062F                      u777 056C                      u697 0654  
                    fsr0 0004                     l1001 0568                     l1003 0571  
                   l1011 057E                     l1013 0587                     l1005 0576  
                   l1021 052A                     l1101 0659                     l1015 058A  
                   l1007 0579                     l1023 052E                     l1111 067A  
                   l1041 05D0                     l1033 05BE                     l1017 0593  
                   l1009 057B                     l1025 0532                     l1121 06A9  
                   l1105 0663                     l1113 0680                     l1201 0741  
                   l1051 05E7                     l1043 05DA                     l1035 05C2  
                   l1027 0534                     l1019 0529                     l1123 06AD  
                   l1115 0699                     l1107 066E                     l1211 0769  
                   l1203 0743                     l1053 05E9                     l1045 05E1  
                   l1037 05CB                     l1061 0545                     l1029 053B  
                   l1125 06B3                     l1117 069F                     l1109 0676  
                   l1221 07A7                     l1205 0745                     l1141 06CC  
                   l1133 06BA                     l1055 05EB                     l1047 05E3  
                   l1039 05CE                     l1063 0549                     l1127 06B4  
                   l1119 06A4                     l1231 07DD                     l1223 07BC  
                   l1207 0758                     l1151 06D4                     l1143 06CE  
                   l1135 06C8                     l1049 05E5                     l1057 053E  
                   l1129 06B8                     l1081 060F                     l1065 05EE  
                   l1241 07F6                     l1233 07DF                     l1225 07CB  
                   l1217 076C                     l1209 075A                     l1153 06DA  
                   l1137 06C9                     l1059 0540                     l1091 0634  
                   l1075 05F9                     l1067 05F1                     l1235 07E3  
                   l1227 07D7                     l1219 07A1                     l1171 0702  
                   l1163 06E5                     l1155 06E0                     l1139 06CA  
                   l1085 0616                     l1077 0602                     l1069 05F8  
                   l1237 07ED                     l1229 07DB                     l1173 0704  
                   l1165 06E8                     l1157 06E2                     l1149 06D1  
                   l1095 063B                     l1087 0620                     l1079 0606  
                   l1239 07F0                     l1191 072A                     l1183 070E  
                   l1175 0706                     l1167 06EE                     l1097 0645  
                   l1089 062B                     l1193 0730                     l1185 0714  
                   l1177 0708                     l1169 06F4                     l1099 0650  
                   l1195 073B                     l1187 071A                     l1197 073D  
                   l1189 0724                     l1199 073F                     STR_1 0024  
                   STR_2 0024                     STR_3 002E                     STR_4 0019  
                   STR_5 000B                     _main 06BA                     btemp 007E  
                   start 0000        ___bmul@multiplier 0073                    ?_main 0070  
                  _CMCON 001F                    _PORTA 0005                    _PORTB 0006  
                  _TRISA 0085                    _TRISB 0086          __end_of_lcd_dat 0597  
        __end_of_lcd_cmd 0575          __end_of_lcd_str 0553                    _linha 0007  
                  main@i 0024                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07FE             __end_of_main 07FE  
                 ??_main 0020          tc_tecla@timeout 0074         __end_of_lcd_init 05EE  
                 ___bmul 0528                   _lcd_wr 0597                ??_lcd_dat 0073  
              ??_lcd_cmd 0073         __end_of_tc_tecla 06BA                ??_lcd_str 0076  
__end_of__initialization 07FE      ___bmul@multiplicand 0070           __pcstackCOMMON 0070  
          __end_of_linha 000B              tc_tecla@ret 007B              tc_tecla@tmp 007A  
             __pmaintext 06BA                  ?___bmul 0070                  ?_lcd_wr 0070  
              ?_lcd_init 0070               __stringtab 0001                ?_tc_tecla 0074  
        __size_of___bmul 0015          __size_of_lcd_wr 0027                  __ptext1 05EE  
                __ptext2 0528                  __ptext3 053D                  __ptext4 0575  
                __ptext5 05BE                  __ptext6 0553                  __ptext7 0597  
                _lcd_dat 0575                  _lcd_cmd 0553                  _lcd_str 053D  
                lcd_wr@i 0072               ??_lcd_init 0076     end_of_initialization 07FE  
             ??_tc_tecla 0076               lcd_dat@val 0075               lcd_cmd@val 0075  
             lcd_str@str 0078           __end_of___bmul 053D           __end_of_lcd_wr 05BE  
    start_initialization 07FE                 ??___bmul 0071                 ??_lcd_wr 0070  
              ___latbits 0000            __pcstackBANK0 0020        __size_of_lcd_init 0030  
             tc_tecla@to 0078        __size_of_tc_tecla 00CC                __pstrings 0001  
               ?_lcd_dat 0070                 ?_lcd_cmd 0070                 ?_lcd_str 0070  
            __stringbase 0006                lcd_wr@val 0071                main@tecla 0023  
     __end_of__stringtab 0007         __size_of_lcd_dat 0022         __size_of_lcd_cmd 0022  
       __size_of_lcd_str 0016                tc_tecla@i 007C                 _lcd_init 05BE  
          __size_of_main 0144                 _tc_tecla 05EE                 lcd_str@i 0077  
              stringcode 0001                 stringdir 0001                 stringtab 0001  
